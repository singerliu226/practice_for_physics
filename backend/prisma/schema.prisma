// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  TEACHER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  phone     String?  @unique
  password  String
  role      UserRole @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 学生信息
  student Student?
  // 教师信息
  teacher Teacher?

  @@map("users")
}

model Student {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  name      String
  grade     String // 年级：初一、初二、初三
  classId   String? // 班级ID
  avatar    String?
  
  // 学习进度与统计
  totalAnswered    Int @default(0) // 总答题数
  correctAnswered  Int @default(0) // 正确答题数
  currentChapter   String? // 当前学习章节

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  class         Class?          @relation(fields: [classId], references: [id])
  exerciseRecords ExerciseRecord[]
  wrongQuestions  WrongQuestion[]

  @@map("students")
}

model Teacher {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  name      String
  subject   String @default("物理") // 任教科目
  avatar    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  classes Class[]

  @@map("teachers")
}

model Class {
  id        String @id @default(cuid())
  name      String // 班级名称，如"初二(3)班"
  grade     String // 年级
  teacherId String
  teacher   Teacher @relation(fields: [teacherId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  students Student[]

  @@map("classes")
}

model Question {
  id          String @id @default(cuid())
  title       String // 题目标题
  content     String // 题目内容 (HTML/Markdown)
  options     Json?  // 选择题选项 JSON: ["A. xxx", "B. yyy"]
  answer      String // 正确答案
  explanation String? // 答案解析
  
  // 分类信息
  chapter     String // 章节：如"力学"、"电学"
  section     String? // 小节：如"牛顿定律"
  difficulty  Int @default(1) // 难度：1-5
  tags        String[] // 标签数组
  
  // 统计信息
  totalAttempts   Int @default(0) // 总答题次数
  correctAttempts Int @default(0) // 正确次数

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  exerciseRecords ExerciseRecord[]
  wrongQuestions  WrongQuestion[]

  @@map("questions")
}

model ExerciseRecord {
  id         String @id @default(cuid())
  studentId  String
  questionId String
  
  student    Student  @relation(fields: [studentId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
  
  answer     String // 学生答案
  isCorrect  Boolean // 是否正确
  timeSpent  Int? // 用时(秒)
  
  createdAt  DateTime @default(now())

  @@map("exercise_records")
}

model WrongQuestion {
  id         String @id @default(cuid())
  studentId  String
  questionId String
  
  student    Student  @relation(fields: [studentId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
  
  wrongAnswer String // 错误答案
  reviewCount Int @default(0) // 复习次数
  isResolved  Boolean @default(false) // 是否已掌握
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([studentId, questionId])
  @@map("wrong_questions")
}

model PasswordResetCode {
  id        String   @id @default(cuid())
  email     String   @unique
  code      String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([email])
  @@map("password_reset_codes")
} 